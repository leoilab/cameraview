// Copyright (C) 2016 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

apply plugin: 'com.android.library'
apply plugin: 'maven'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/base'
        main.java.srcDirs += 'src/main/api9'
        main.java.srcDirs += 'src/main/api14'
        main.java.srcDirs += 'src/main/api21'
        main.java.srcDirs += 'src/main/api23'
    }
}

dependencies {
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation "androidx.appcompat:appcompat:1.1.0"

    // Tests
    testImplementation 'junit:junit:4.12'
    androidTestImplementation('androidx.test.ext:junit:1.1.1') {
        exclude module: 'support-annotations'
    }
    androidTestImplementation('androidx.test.espresso:espresso-core:3.2.0') {
        exclude module: 'support-annotations'
    }
}

uploadArchives {
    def privatePropertiesFile = rootProject.file("private.properties")
    def privateProperties = new Properties()

    if (privatePropertiesFile.exists()) {
        privateProperties.load(new FileInputStream(privatePropertiesFile))
    }

    def mavenUsername = privateProperties['myget.username']
    def mavenToken = privateProperties['myget.token']

    if (project.hasProperty('myget.username') && project.hasProperty('myget.token')) {
        mavenUsername = project.getProperty('myget.username')
        mavenToken = project.getProperty('myget.token')
    }

    repositories {
        mavenDeployer {
            repository(url: "https://www.myget.org/F/imagine/maven") {
                authentication(userName: mavenUsername, password: mavenToken)
            }
            pom.project {
                name 'CameraView'
                groupId 'com.leo_pharma'
                artifactId 'cameraview'
                version '1.3'
                packaging 'aar'
                description 'The LEO iLab fork of CameraView.'
                url 'https://github.com/leoilab/cameraview'
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'https://github.com/leoilab/cameraview/blob/master/LICENSE'
                        distribution 'repo'
                    }
                }
            }
        }
    }
}
